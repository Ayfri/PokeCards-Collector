---
import Layout from '../layouts/Layout.astro';
import PageTitle from "../components/PageTitle.astro";
import PokemonType from "../components/PokemonType.astro";
import "../styles/colors.css";
import {Image} from "astro:assets";
import type {Card, Pokemon, Set} from "../types"

const filters = ['numero', 'index'];
const searchParams = Astro.url.searchParams;
const numeroParam = searchParams.has('numero') ? searchParams.get('numero') : null;

let centeredCardId = Astro.url.searchParams.get('index') ? parseInt(Astro.url.searchParams.get('index')) : 0;

const setsList = await fetch(`${import.meta.env.API_URL}/sets`);
const sets = await setsList.json() as Set[];

if (numeroParam && !(numeroParam >= 1 && numeroParam <= 151)) {
	Astro.url.searchParams.delete('numero');
	return Astro.redirect("/");
}

for (const [key, _] of searchParams.entries()) {
	if (!filters.includes(key)) {
		Astro.url.searchParams.delete(key);
		return Astro.redirect(Astro.url.href);
	}
}

const response = await fetch(`${import.meta.env.API_URL}/cards?${searchParams.toString()}`);
let cards = await response.json() as Card[];
cards = cards.sort((a, b) => a.pokemon.numero - b.pokemon.numero || b.price - a.price);
console.log(cards);

const setLogoFirstHalf = cards.slice(0, 5).map(card => card.set.imageUrl);
const setLogoSecondHalf = cards.slice(5, 10).map(card => card.set.imageUrl);
---

<Layout title="PokÃ©store">
	<main>
		<div class="filter"></div>
		<div class="main-container">
			<div class="top-container">
				<div class="card-container">
					<div class="left-card">
						{setLogoFirstHalf.map((card, index) =>
							<Image
								class:list={[`set ${index}`]}
								src={card} alt="Charizard"
								width="75"
								height="105"
							/>)}
					</div>
					<div class="center-card">
						<div class:list={['card-aura', cards[centeredCardId].types.toLowerCase().split(',')[0]]}></div>
						<Image
							src={cards[centeredCardId].imageUrl} alt="Charizard"
							width="300"
							height="420"
						/>
					</div>
					<div class="right-card">
						{setLogoSecondHalf.map((card, index) =>
							<Image
								class:list={[`set ${index + 5}`]}

								src={card} alt="Charizard"
								width="75"
								height="105"
							/>)}
					</div>
				</div>
			</div>
			<div class="bottom-container">
				<PageTitle
					title={cards[0].pokemon.name}
				></PageTitle>
				<div class="bottom-half-bottom">
					<div class="left-space"></div>
					<div class="pokemon-info">
						<div class="types">
							{cards[centeredCardId].types.toLowerCase().split(',').map(type =>
								<PokemonType type={type}></PokemonType>)}
						</div>
						<p>
							{cards[0].pokemon.description}
						</p>
					</div>
					<div class="purchase-button">
						<p>
							{cards[centeredCardId].price} $
						</p>
						<button>
							Add to cart
						</button>
					</div>
				</div>
			</div>
		</div>
		<div class="back-button"></div>
	</main>
</Layout>
<script>
	const sets = document.querySelectorAll('.set');
	sets.forEach(set => {
		set.addEventListener('click', () => {
			const index = set.classList[1];
			const url = new URL(window.location.href);
			url.searchParams.set('index', index);
			window.location.href = url.toString();
		})
	});
</script>

<style>
	main {
		margin: auto;
		padding: .6rem;
		color: white;
		font-size: 20px;
		line-height: 1.6;
		max-width: 100vw;
		max-height: 100vh;
	}

	.filter {
		background-image: url("/public/particles.png");
		background-repeat: no-repeat;
		width: -webkit-fill-available;
		height: -webkit-fill-available;
		z-index: -2;
		position: absolute;
	}

	.main-container {
		margin: 5rem auto 0 auto;
		display: flex;
		flex-direction: column;
		gap: 2rem;
		width: 90%;
		z-index: -1;
	}

	.top-container {
		height: 33rem;
	}

	.card-container {
		height: 100%;
		width: 50%;
		margin: auto;
		display: flex;
		gap: 3rem;
	}

	.left-card, .right-card {
		width: 60%;
		display: flex;
		align-items: center;
		justify-content: space-evenly;
		flex-direction: column;
		background-color: rgba(35, 35, 35, 0.75);
		border-radius: 1rem;
		border: #f3d02c solid 6px;
		padding: 1rem;
		height: 34rem;
		box-sizing: border-box;
	}

	.left-card > img, .right-card > img {
		width: 8.5rem;
		height: 5.5rem;
		object-fit: contain;
	}


	.center-card {
		position: relative;
	}

	.center-card > .card-aura {
		position: absolute;
		background-color: var(--type-color);
		width: 43rem;
		height: 43rem;
		z-index: -1;
		border-radius: 50%;
		filter: blur(5rem) opacity(0.5);
		left: 50%;
		top: 50%;
		transform: translateX(-50%) translateY(-50%);
	}

	.center-card > img {
		width: 24rem;
		height: 34rem;
		border-radius: 0.5rem;
	}

	.bottom-container {
		height: 15rem;
		display: flex;
		flex-direction: column;
		gap: 1rem;
		align-items: center;
	}

	.bottom-half-bottom {
		height: 100%;
		width: 100%;
		display: flex;
		gap: 10rem;
		flex-direction: row;
		justify-content: space-between;
	}

	.left-space {
		width: 15%;
	}

	.pokemon-info {
		display: flex;
		flex-direction: column;
		gap: 1rem;
		align-items: center;
	}

	.types {
		display: flex;
		gap: 1rem;
		flex-direction: row;
	}

	.pokemon-info > p {
		margin: 0;
		text-align: center;
	}

	.purchase-button {
		background-color: #232323;
		border-radius: 2rem;
		width: 15%;
		display: flex;
		flex-direction: column;
		align-items: center;
		padding: 1rem 0;
	}

	.purchase-button > p {
		margin: 0;
	}

	.purchase-button > button {
		background-color: #ff9e00;
		font-size: 1.2rem;
		padding: 1rem;
		border-radius: 1rem;
		border: none;
		transition: all 0.2s ease-in-out;
	}

	.purchase-button > button:hover {
		background-color: #ffb444;
		cursor: pointer;
	}

	.back-button {
		background-color: #232323;
		border-radius: 2rem;
		height: 5rem;
		width: 5rem;
		position: fixed;
		bottom: 1rem;
	}
</style>
