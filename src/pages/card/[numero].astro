---
import "~/styles/colors.css";

import type {GetStaticPaths} from 'astro';
import {getCards, getPokemons} from '$helpers/data';
import Layout from '@layouts/Layout.astro';
import PokemonDisplay from '@components/card/PokemonDisplay.svelte';
import type {Card} from "~/types";


export const getStaticPaths = (async () => {
	const pokemons = await getPokemons();
	let allCards = await getCards();
	allCards = allCards.sort((a, b) => a.pokemon.id - b.pokemon.id || b.price - a.price);

	return pokemons.map(pokemon => {
		const pokemonCards = allCards.filter(c => parseInt(c.numero) === pokemon.id && c.set);
		if (!pokemonCards.length) return undefined;

		return {
			params: {
				numero: pokemon.id,
			},
			props: {
				cards: pokemonCards,
			},
		};
	}).filter(x => !!x);
}) satisfies GetStaticPaths;

interface Props {
	cards: Card[];
}

const {cards} = Astro.props;

const pokemons = await getPokemons();

const card = cards[0];
const pokemonName = card.pokemon.name;
const capitalizedPokemonName = pokemonName.charAt(0).toUpperCase() + pokemonName.slice(1);
---

<Layout
	title={`${capitalizedPokemonName} - Cards`}
	description={`${capitalizedPokemonName}: ${card.pokemon.description}`}
	image={{
		url: card.image,
		alt: card.pokemon.description,
	}}
>
	<main class="max-w-[100vw] m-auto p-2 text-lg text-white">
		<div class="mt-10 mx-auto flex flex-col gap-8 w-[90%] -z-10 max-lg:mt-8">
			<PokemonDisplay client:load {cards} {pokemons}/>
		</div>
	</main>
</Layout>
