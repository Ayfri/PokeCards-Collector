---
import Layout from "../layouts/Layout.astro";
import PageTitle from "../components/PageTitle.astro";
import Panel from "../components/Panel.astro";
import type {Card, Set} from "../types";

const typesList = await fetch(`${import.meta.env.API_URL}/types`);
const types = await typesList.json() as string[];

const setsList = await fetch(`${import.meta.env.API_URL}/sets`);
const sets = await setsList.json() as Set[];

const response = await fetch(`${import.meta.env.API_URL}/cards`);
let cards = await response.json() as Card[];
cards = cards.filter((card, index, self) => self.findIndex(c => c.pokemon.numero === card.pokemon.numero) === index);

const rarityList = await fetch(`${import.meta.env.API_URL}/rarity`);
const rarity = await rarityList.json() as string[];
---

<main>
	<Layout title="Pokéstore - Admin">
		<div class="top-container">
			<PageTitle
				title='Admin'
			></PageTitle>
		</div>
		<div class="panels-container">
			<Panel id="pokemon-form" route="/admin/pokemon" title="Pokémon"
			       inputs={["numero", "name", "description"]}
			       selects={[{
				       name: "type",
				       options: [...types.sort((a, b) => a.localeCompare(b)).map(type => type)],
				       multiple: true
			       }]}
			></Panel>
			<Panel id="card-form" route="/admin/card" title="Card"
			       inputs={["price", "image"]}
			       selects={[{name: "types", options: [...types.sort((a, b) => a.localeCompare(b)).map(type => type)], multiple: true},
				       {
					       name: "rarity",
					       options: [
						       ...rarity.sort((a, b) => a.localeCompare(b)).map(rarity => rarity)
					       ],
					       multiple: false
				       },
				       {
					        name: "set",
					        options: [
						        ...sets.map(set => set.name).sort((a, b) => a.localeCompare(b)).map(set => set)
					        ],
					        multiple: false
				       },
				       {
					       name: "pokemon",
					       options: [
						       ...cards.map(card => card.pokemon.name).sort((a, b) => a.localeCompare(b)).map(pokemon => pokemon)
					       ],
					       multiple: false
				       }
			       ]}
			></Panel>
			<Panel id="set-form"
			       route="/admin/set"
			       title="Set"
			       inputs={[
				       "name", "image"
			       ]}
			       selects={[{
				       name: "",
				       options: [""],
				       multiple: false
			       }
			       ]}
			></Panel>
		</div>
	</Layout>
</main>
<script>
	import {displayError, displaySuccess, handleForm} from '../utils/form';
	import type {Pokemon} from "../types";

	async function sleep(ms: number) {
		return new Promise((resolve) => setTimeout(resolve, ms));
	}


	const forms = document.querySelectorAll('form');

	forms.forEach(formElement => {
		handleForm<Pokemon>(async (result, response, form) => {
			if (response.status === 201) {
				displayError('', form);
				displaySuccess('', form);
				await sleep(50);
				displaySuccess(result, form);
				form.reset();
				return;
			}
			displaySuccess('', form);
			displayError('', form);
			await sleep(50);
			displayError(result, form);
		}, false, formElement, true);
	});
</script>
<style>
	:root {
		--card-margin: 1rem;
		--header-padding: 0.6rem;
	}

	main {
		padding: var(--header-padding);
		color: white;
		font-size: 20px;
		line-height: 1.6;
		display: flex;
		flex-direction: column;
		height: calc(100vh - 5rem);
		gap: 1rem;
		margin-bottom: 10rem;
	}

	.panels-container {
		display: flex;
		justify-content: space-evenly;
		align-items: center;
		padding-bottom: 5rem;
		padding-top: 5rem;
	}

	.top-container {
		display: flex;
		justify-content: space-between;
		margin-left: 7rem;
		margin-right: 7rem;
		align-items: center;
		border-bottom: white solid 6px;
	}
</style>