---
import Layout from '../layouts/Layout.astro';
import PageTitle from "../components/PageTitle.astro";
---
<Layout title="Cart">
	<main>
		<div class="cart-container">
			<PageTitle title="Cart"/>
			<div class="bottom-container">
				<div class="card-container"></div>
				<div class="purchase-resume-container">
					<h2>Resume</h2>
					<h3>Articles</h3>
					<div class="purchase-resume-content"></div>
					<div class="purchase-resume-cost"></div>
					<a href="/confirm-address">
						<button disabled id="proceed">Proceed to checkout</button>
					</a>
				</div>
			</div>
		</div>
	</main>
</Layout>
<style>
	main {
		margin: auto;
		padding: .6rem;
		color: white;
		font-size: 20px;
		line-height: 1.6;
		max-width: 100vw;
		max-height: 100vh;
	}

	.cart-container {
		margin: auto 7rem;
		display: flex;
		flex-direction: column;
	}

	.bottom-container {
		margin-top: 2rem;
		display: flex;
		flex-direction: row;
		justify-content: space-around;
	}

	.card-container {
		display: flex;
		flex-direction: column;
		gap: 2rem;
	}


	.purchase-resume-container {
		background-color: #232323;
		border-radius: 1rem;
		display: flex;
		flex-direction: column;
		padding: 2rem;
		width: 20rem;
		height: fit-content;
	}

	.purchase-resume-container > h2 {
		margin: 0;
	}

	.purchase-resume-container > a > button {
		background-color: #ff9e00;
		font-size: 1.2rem;
		padding: 1rem;
		border-radius: 1rem;
		border: none;
		transition: all 0.2s ease-in-out;
		width: 100%;
	}

	.purchase-resume-container > a > button:hover {
		background-color: #ffb444;
		cursor: pointer;
	}

	.purchase-resume-container > a > button[disabled]:hover {
		background-color: #ff9e00;
		cursor: not-allowed;
	}

	.purchase-resume-content {
		display: flex;
		flex-direction: column;
		gap: 0.5rem;
	}
</style>
<style is:inline>
	.card-container {
		display: flex;
		position: relative;
		flex-direction: row;
	}

	.card-container > img {
		border-radius: 0.5rem;
		width: 15rem;
		height: 21rem;
	}

	.card-info {
		padding: 1rem;
		display: flex;
		flex-direction: column;
		justify-content: space-between;
	}

	.card-info > .price {
		font-weight: 600;
	}

	.purchase-resume-content-item {
		display: flex;
		justify-content: space-between;
	}

	.purchase-resume-content-item p {
		margin: 0;
	}

	.purchase-resume-content-item > .item-info {
		display: flex;
		flex-direction: row;
		gap: 1rem;
	}

	.card-container .remove {
		align-self: flex-start;
		background-color: #ff4444;
		border-radius: 0.5rem;
		border: none;
		color: white;
		cursor: pointer;
		font-size: 1rem;
		height: 2rem;
		padding: 0.5rem;
		position: absolute;
		right: 0;
		transition: all 0.2s ease-in-out;
		width: 2rem;
	}

	.card-container .remove:hover {
		background-color: #ff6666;
	}
</style>
<script>
	import {getCart} from '../utils/cart';

	const cart = getCart();
	const response = await fetch(
		'/local-storage',
		{
			method: 'POST',
			body: JSON.stringify(cart),
		},
	);

	const cardContainer = document.querySelector('.card-container') as HTMLDivElement;
	const purchaseResumeContainer = document.querySelector('.purchase-resume-content') as HTMLDivElement;
	const purchaseResumeCost = document.querySelector('.purchase-resume-cost') as HTMLDivElement;

	const parser = new DOMParser();
	let string = await response.text();
	string = string.replace(/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi, '');
	string = string.replace(/<!DOCTYPE html>/gi, '');
	string = string.replace('&amp;', 'and');

	const doc = parser.parseFromString(string, 'text/html');

	const cards = doc.querySelector('.cards') as HTMLDivElement;
	cardContainer.append(...cards.querySelectorAll('.card-container'));
	purchaseResumeContainer.append(...doc.querySelectorAll('.purchase-resume-content-item'));
	purchaseResumeCost.append(...doc.querySelectorAll('.total-price'));

	cardContainer.querySelectorAll('.remove').forEach(button => {
		const item = button.closest('.card-container') as HTMLDivElement;
		button.addEventListener('click', () => {
			cart.splice(cart.findIndex(card => card.id === parseInt(item.dataset.id)), 1);
			localStorage.setItem('cart', JSON.stringify(cart));
			window.location.reload();
		});
	});

	const button = document.querySelector('#proceed') as HTMLButtonElement;
	const text = document.createElement('p');
	text.textContent = "Your cart is empty";
	text.style.fontSize = '3rem';

	if (cart.length === 0) {
		cardContainer.appendChild(text);
	} else {
		button.disabled = false;
	}
</script>
