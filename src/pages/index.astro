---
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import CardList from "../components/CardList.astro";
import PageTitle from "../components/PageTitle.astro";


export interface Card {
    name: string;
    imageUrl: string;
    types: string;
    rarity: string;
    price: number;
    pokemon: Pokemon;
}

export interface Pokemon {
    numero: number;
    name: string;
    description: string;
    imageUrl: string;
    types: string;
}

const response = await fetch(`${import.meta.env.API_URL}/cards`);
let cards = await response.json() as Card[];
cards = cards.sort((a, b) => a.pokemon.numero - b.pokemon.numero || b.price - a.price);
cards = cards.filter((card, index, self) => self.findIndex(c => c.pokemon.numero === card.pokemon.numero) === index);
---

<Layout title="PokÃ©store">
    <main>
        <div class="fixed_container">
            <Header
                    cards_href="/cards"
                    username="anta"
                    cart_icon="/icons/cart.svg"
                    cart_href="/cart"
            >
            </Header>
            <div class="top-container">
                <PageTitle title="Card List"></PageTitle>
                <div class="filters-container">
                    <div class="filters-top">
                        <input type="text" placeholder="ID" class="filter">
                        <input type="text" placeholder="Name" class="filter">
                    </div>
                    <div class="filters-bottom">
                        <select name="set" id="set" class="filter">
                            <option value="fire">sws</option>
                            <option value="water">xy</option>
                        </select>
                        <select name="type" id="type" class="filter">
                            <option value="fire">Fire</option>
                            <option value="water">Water</option>
                        </select>
                        <select name="rarity" id="rarity" class="filter">
                            <option value="fire">holo</option>
                            <option value="water">rare</option>
                        </select>
                    </div>
                </div>
            </div>
        </div>
        <div class="cards-grid">
            {cards.map(card =>
                    <CardList card={card}/>)}
        </div>
    </main>
</Layout>

<style>
    :root {
        --header-padding: 0.6rem;
    }

    main {
        margin: auto;
        padding: var(--header-padding);
        color: white;
        font-size: 20px;
        line-height: 1.6;
        max-width: 100vw;
        max-height: 100vh;
    }

    .fixed_container {
        position: fixed;
        z-index: 99999;
        width: calc(100% - var(--header-padding)*2);
    }

    .cards-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(30rem, 1fr));
        place-items: center;
        margin-top: 12.5rem;
        overflow-y: scroll;
        height: 40rem;
        scroll-behavior: smooth;
    }

    .cards-grid::-webkit-scrollbar, html::-webkit-scrollbar, body::-webkit-scrollbar {
        display: none;
    }

    .cards-grid, html, body {
        scrollbar-width: none;
    }

    .top-container {
        display: flex;
        justify-content: space-between;
        margin-left: 7rem;
        margin-right: 7rem;
        align-items: center;
        border-bottom: white solid 6px;
    }

    .filters-container {
        display: flex;
        flex-flow: column;
        align-items: flex-end;
        gap: 1rem;
    }

    input::placeholder {
        color: white;
        opacity: 1;
    }

    input, select {
        border-radius: 4px;
        border: 3px solid #FFF;
        background: transparent;
        color: white;
        font-family: "Clash Display",serif;
        font-weight: 500;
        padding: 0.2rem;
        width: 10rem;
        box-sizing: content-box;
    }

    input:focus {
        outline: none;
    }

    .filters-top, .filters-bottom {
        gap: 1rem;
        display: flex;
    }
</style>
