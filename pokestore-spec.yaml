openapi: 3.0.0
info:
  title: Pokestore
  version: 1.0.0
servers:
  - url: http://{{url}}
tags:
  - name: /admin/
    description: /admin/ contains all routes to manage the API.
  - name: /auth/
    description: /auth/ contains all routes to manage the account.
  - name: /cards/
    description: /cards/ contains all routes to get cards with different filters.
  - name: /pokemons/
    description: /pokemons/ contains all routes to get pokemons.
  - name: /
    description: / contains all routes to get specific pokemons attributes.
paths:
  /admin/card:
    get:
      tags:
        - /admin/
      summary: /card
      description: >-
        /admin/card contains the admin card manager to add / remove or edit a
        card.
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/load:
    get:
      tags:
        - /admin/
      summary: /load
      description: >-
        /admin/load contains the admin API loader, to load every files in the
        database.
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/pokemon:
    get:
      tags:
        - /admin/
      summary: /pokemon
      description: >-
        /admin/pokemon contains the admin pokemon manager to add / remove or
        edit a pokemon.
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/set:
    get:
      tags:
        - /admin/
      summary: /set
      description: /admin/set contains the admin set manager to add / remove or edit a set.
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /auth/login:
    get:
      tags:
        - /auth/
      summary: /login
      description: /auth/login contains the auth manager to login.
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /auth/logout:
    get:
      tags:
        - /auth/
      summary: /logout
      description: /auth/logout contains the auth manager to logout.
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /auth/signup:
    get:
      tags:
        - /auth/
      summary: /signup
      description: /auth/signup ontains the auth manager to signup.
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /cards:
    get:
      tags:
        - /cards/
      summary: '?set'
      description: /cards?set={set} contains every cards that have the set {set}.
      parameters:
        - name: set
          in: query
          schema:
            type: string
          example: base
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /cards/1696760100175103:
    get:
      tags:
        - /cards/
      summary: /[id]
      description: /cards/\[id\] contains the card with the id \[id\].
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /pokemons:
    get:
      tags:
        - /pokemons/
      summary: /
      description: /pokemons/ contains every pokemons, with no filter.
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /pokemons/1696760192781708:
    get:
      tags:
        - /pokemons/
      summary: /[id]
      description: /pokemons/\[id\] contains the pokemon with the id \[id\].
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /types:
    get:
      tags:
        - /
      summary: /types
      description: /types contains all the different cards types.
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /rarity:
    get:
      tags:
        - /
      summary: /rarity
      description: /rarity contains all the different cards rarities.
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /sets:
    get:
      tags:
        - /
      summary: /sets
      description: /sets contains all the different cards sets.
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
